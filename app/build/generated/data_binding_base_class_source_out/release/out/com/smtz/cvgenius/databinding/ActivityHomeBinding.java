// Generated by view binder compiler. Do not edit!
package com.smtz.cvgenius.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.gms.ads.AdView;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.navigation.NavigationView;
import com.smtz.cvgenius.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import soup.neumorphism.NeumorphCardView;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final AdView bannerAdView;

  @NonNull
  public final ImageView btnMenu;

  @NonNull
  public final LinearLayout btnRate;

  @NonNull
  public final LinearLayout btnShare;

  @NonNull
  public final LinearLayout btnTemplates;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbarLayout;

  @NonNull
  public final DrawerLayout drawerLayout;

  @NonNull
  public final NeumorphCardView fabCreateNewCV;

  @NonNull
  public final ImageView fabImage;

  @NonNull
  public final NeumorphCardView hideEmptyView;

  @NonNull
  public final NeumorphCardView llEmptyView;

  @NonNull
  public final LinearLayout llRecyclerView;

  @NonNull
  public final NavigationView navView;

  @NonNull
  public final RecyclerView rvCreatedCV;

  @NonNull
  public final MaterialToolbar toolBar;

  @NonNull
  public final TextView tvHeading;

  private ActivityHomeBinding(@NonNull DrawerLayout rootView, @NonNull AppBarLayout appBarLayout,
      @NonNull AdView bannerAdView, @NonNull ImageView btnMenu, @NonNull LinearLayout btnRate,
      @NonNull LinearLayout btnShare, @NonNull LinearLayout btnTemplates,
      @NonNull CollapsingToolbarLayout collapsingToolbarLayout, @NonNull DrawerLayout drawerLayout,
      @NonNull NeumorphCardView fabCreateNewCV, @NonNull ImageView fabImage,
      @NonNull NeumorphCardView hideEmptyView, @NonNull NeumorphCardView llEmptyView,
      @NonNull LinearLayout llRecyclerView, @NonNull NavigationView navView,
      @NonNull RecyclerView rvCreatedCV, @NonNull MaterialToolbar toolBar,
      @NonNull TextView tvHeading) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.bannerAdView = bannerAdView;
    this.btnMenu = btnMenu;
    this.btnRate = btnRate;
    this.btnShare = btnShare;
    this.btnTemplates = btnTemplates;
    this.collapsingToolbarLayout = collapsingToolbarLayout;
    this.drawerLayout = drawerLayout;
    this.fabCreateNewCV = fabCreateNewCV;
    this.fabImage = fabImage;
    this.hideEmptyView = hideEmptyView;
    this.llEmptyView = llEmptyView;
    this.llRecyclerView = llRecyclerView;
    this.navView = navView;
    this.rvCreatedCV = rvCreatedCV;
    this.toolBar = toolBar;
    this.tvHeading = tvHeading;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.bannerAdView;
      AdView bannerAdView = ViewBindings.findChildViewById(rootView, id);
      if (bannerAdView == null) {
        break missingId;
      }

      id = R.id.btnMenu;
      ImageView btnMenu = ViewBindings.findChildViewById(rootView, id);
      if (btnMenu == null) {
        break missingId;
      }

      id = R.id.btnRate;
      LinearLayout btnRate = ViewBindings.findChildViewById(rootView, id);
      if (btnRate == null) {
        break missingId;
      }

      id = R.id.btnShare;
      LinearLayout btnShare = ViewBindings.findChildViewById(rootView, id);
      if (btnShare == null) {
        break missingId;
      }

      id = R.id.btnTemplates;
      LinearLayout btnTemplates = ViewBindings.findChildViewById(rootView, id);
      if (btnTemplates == null) {
        break missingId;
      }

      id = R.id.collapsingToolbarLayout;
      CollapsingToolbarLayout collapsingToolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbarLayout == null) {
        break missingId;
      }

      DrawerLayout drawerLayout = (DrawerLayout) rootView;

      id = R.id.fabCreateNewCV;
      NeumorphCardView fabCreateNewCV = ViewBindings.findChildViewById(rootView, id);
      if (fabCreateNewCV == null) {
        break missingId;
      }

      id = R.id.fabImage;
      ImageView fabImage = ViewBindings.findChildViewById(rootView, id);
      if (fabImage == null) {
        break missingId;
      }

      id = R.id.hideEmptyView;
      NeumorphCardView hideEmptyView = ViewBindings.findChildViewById(rootView, id);
      if (hideEmptyView == null) {
        break missingId;
      }

      id = R.id.llEmptyView;
      NeumorphCardView llEmptyView = ViewBindings.findChildViewById(rootView, id);
      if (llEmptyView == null) {
        break missingId;
      }

      id = R.id.llRecyclerView;
      LinearLayout llRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (llRecyclerView == null) {
        break missingId;
      }

      id = R.id.nav_view;
      NavigationView navView = ViewBindings.findChildViewById(rootView, id);
      if (navView == null) {
        break missingId;
      }

      id = R.id.rvCreatedCV;
      RecyclerView rvCreatedCV = ViewBindings.findChildViewById(rootView, id);
      if (rvCreatedCV == null) {
        break missingId;
      }

      id = R.id.toolBar;
      MaterialToolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.tvHeading;
      TextView tvHeading = ViewBindings.findChildViewById(rootView, id);
      if (tvHeading == null) {
        break missingId;
      }

      return new ActivityHomeBinding((DrawerLayout) rootView, appBarLayout, bannerAdView, btnMenu,
          btnRate, btnShare, btnTemplates, collapsingToolbarLayout, drawerLayout, fabCreateNewCV,
          fabImage, hideEmptyView, llEmptyView, llRecyclerView, navView, rvCreatedCV, toolBar,
          tvHeading);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
