// Generated by view binder compiler. Do not edit!
package com.smtz.cvgenius.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.smtz.cvgenius.R;
import com.smtz.cvgenius.common.delegates.RoundedCornerImageView;
import com.smtz.cvgenius.presentation.preview.templateViewPods.ResumeSecondTwoViewPod;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewPodZresumeSecondTwoBinding implements ViewBinding {
  @NonNull
  private final ResumeSecondTwoViewPod rootView;

  @NonNull
  public final LinearLayout containerAchievement;

  @NonNull
  public final LinearLayout containerAddress;

  @NonNull
  public final LinearLayout containerContact;

  @NonNull
  public final LinearLayout containerDoB;

  @NonNull
  public final LinearLayout containerEducation;

  @NonNull
  public final LinearLayout containerEmail;

  @NonNull
  public final LinearLayout containerExperience;

  @NonNull
  public final LinearLayout containerFirstPageLeftSide;

  @NonNull
  public final LinearLayout containerFirstPageRightSide;

  @NonNull
  public final LinearLayout containerName;

  @NonNull
  public final LinearLayout containerNationality;

  @NonNull
  public final LinearLayout containerObjective;

  @NonNull
  public final LinearLayout containerPhone;

  @NonNull
  public final LinearLayout containerProject;

  @NonNull
  public final LinearLayout containerReference;

  @NonNull
  public final LinearLayout containerSecondPageLeftSide;

  @NonNull
  public final LinearLayout containerSecondPageRightSide;

  @NonNull
  public final LinearLayout containerSkill;

  @NonNull
  public final LinearLayout containerWebsite;

  @NonNull
  public final LinearLayout firstRootView;

  @NonNull
  public final RoundedCornerImageView ivSelectedImage;

  @NonNull
  public final ImageView ivSignature;

  @NonNull
  public final ResumeSecondTwoViewPod resumeSecondTwo;

  @NonNull
  public final LinearLayout secondRootViewSecondTwo;

  @NonNull
  public final TextView tvPosition;

  private ViewPodZresumeSecondTwoBinding(@NonNull ResumeSecondTwoViewPod rootView,
      @NonNull LinearLayout containerAchievement, @NonNull LinearLayout containerAddress,
      @NonNull LinearLayout containerContact, @NonNull LinearLayout containerDoB,
      @NonNull LinearLayout containerEducation, @NonNull LinearLayout containerEmail,
      @NonNull LinearLayout containerExperience, @NonNull LinearLayout containerFirstPageLeftSide,
      @NonNull LinearLayout containerFirstPageRightSide, @NonNull LinearLayout containerName,
      @NonNull LinearLayout containerNationality, @NonNull LinearLayout containerObjective,
      @NonNull LinearLayout containerPhone, @NonNull LinearLayout containerProject,
      @NonNull LinearLayout containerReference, @NonNull LinearLayout containerSecondPageLeftSide,
      @NonNull LinearLayout containerSecondPageRightSide, @NonNull LinearLayout containerSkill,
      @NonNull LinearLayout containerWebsite, @NonNull LinearLayout firstRootView,
      @NonNull RoundedCornerImageView ivSelectedImage, @NonNull ImageView ivSignature,
      @NonNull ResumeSecondTwoViewPod resumeSecondTwo,
      @NonNull LinearLayout secondRootViewSecondTwo, @NonNull TextView tvPosition) {
    this.rootView = rootView;
    this.containerAchievement = containerAchievement;
    this.containerAddress = containerAddress;
    this.containerContact = containerContact;
    this.containerDoB = containerDoB;
    this.containerEducation = containerEducation;
    this.containerEmail = containerEmail;
    this.containerExperience = containerExperience;
    this.containerFirstPageLeftSide = containerFirstPageLeftSide;
    this.containerFirstPageRightSide = containerFirstPageRightSide;
    this.containerName = containerName;
    this.containerNationality = containerNationality;
    this.containerObjective = containerObjective;
    this.containerPhone = containerPhone;
    this.containerProject = containerProject;
    this.containerReference = containerReference;
    this.containerSecondPageLeftSide = containerSecondPageLeftSide;
    this.containerSecondPageRightSide = containerSecondPageRightSide;
    this.containerSkill = containerSkill;
    this.containerWebsite = containerWebsite;
    this.firstRootView = firstRootView;
    this.ivSelectedImage = ivSelectedImage;
    this.ivSignature = ivSignature;
    this.resumeSecondTwo = resumeSecondTwo;
    this.secondRootViewSecondTwo = secondRootViewSecondTwo;
    this.tvPosition = tvPosition;
  }

  @Override
  @NonNull
  public ResumeSecondTwoViewPod getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewPodZresumeSecondTwoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewPodZresumeSecondTwoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_pod_zresume_second_two, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewPodZresumeSecondTwoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.containerAchievement;
      LinearLayout containerAchievement = ViewBindings.findChildViewById(rootView, id);
      if (containerAchievement == null) {
        break missingId;
      }

      id = R.id.containerAddress;
      LinearLayout containerAddress = ViewBindings.findChildViewById(rootView, id);
      if (containerAddress == null) {
        break missingId;
      }

      id = R.id.containerContact;
      LinearLayout containerContact = ViewBindings.findChildViewById(rootView, id);
      if (containerContact == null) {
        break missingId;
      }

      id = R.id.containerDoB;
      LinearLayout containerDoB = ViewBindings.findChildViewById(rootView, id);
      if (containerDoB == null) {
        break missingId;
      }

      id = R.id.containerEducation;
      LinearLayout containerEducation = ViewBindings.findChildViewById(rootView, id);
      if (containerEducation == null) {
        break missingId;
      }

      id = R.id.containerEmail;
      LinearLayout containerEmail = ViewBindings.findChildViewById(rootView, id);
      if (containerEmail == null) {
        break missingId;
      }

      id = R.id.containerExperience;
      LinearLayout containerExperience = ViewBindings.findChildViewById(rootView, id);
      if (containerExperience == null) {
        break missingId;
      }

      id = R.id.containerFirstPageLeftSide;
      LinearLayout containerFirstPageLeftSide = ViewBindings.findChildViewById(rootView, id);
      if (containerFirstPageLeftSide == null) {
        break missingId;
      }

      id = R.id.containerFirstPageRightSide;
      LinearLayout containerFirstPageRightSide = ViewBindings.findChildViewById(rootView, id);
      if (containerFirstPageRightSide == null) {
        break missingId;
      }

      id = R.id.containerName;
      LinearLayout containerName = ViewBindings.findChildViewById(rootView, id);
      if (containerName == null) {
        break missingId;
      }

      id = R.id.containerNationality;
      LinearLayout containerNationality = ViewBindings.findChildViewById(rootView, id);
      if (containerNationality == null) {
        break missingId;
      }

      id = R.id.containerObjective;
      LinearLayout containerObjective = ViewBindings.findChildViewById(rootView, id);
      if (containerObjective == null) {
        break missingId;
      }

      id = R.id.containerPhone;
      LinearLayout containerPhone = ViewBindings.findChildViewById(rootView, id);
      if (containerPhone == null) {
        break missingId;
      }

      id = R.id.containerProject;
      LinearLayout containerProject = ViewBindings.findChildViewById(rootView, id);
      if (containerProject == null) {
        break missingId;
      }

      id = R.id.containerReference;
      LinearLayout containerReference = ViewBindings.findChildViewById(rootView, id);
      if (containerReference == null) {
        break missingId;
      }

      id = R.id.containerSecondPageLeftSide;
      LinearLayout containerSecondPageLeftSide = ViewBindings.findChildViewById(rootView, id);
      if (containerSecondPageLeftSide == null) {
        break missingId;
      }

      id = R.id.containerSecondPageRightSide;
      LinearLayout containerSecondPageRightSide = ViewBindings.findChildViewById(rootView, id);
      if (containerSecondPageRightSide == null) {
        break missingId;
      }

      id = R.id.containerSkill;
      LinearLayout containerSkill = ViewBindings.findChildViewById(rootView, id);
      if (containerSkill == null) {
        break missingId;
      }

      id = R.id.containerWebsite;
      LinearLayout containerWebsite = ViewBindings.findChildViewById(rootView, id);
      if (containerWebsite == null) {
        break missingId;
      }

      id = R.id.firstRootView;
      LinearLayout firstRootView = ViewBindings.findChildViewById(rootView, id);
      if (firstRootView == null) {
        break missingId;
      }

      id = R.id.ivSelectedImage;
      RoundedCornerImageView ivSelectedImage = ViewBindings.findChildViewById(rootView, id);
      if (ivSelectedImage == null) {
        break missingId;
      }

      id = R.id.ivSignature;
      ImageView ivSignature = ViewBindings.findChildViewById(rootView, id);
      if (ivSignature == null) {
        break missingId;
      }

      ResumeSecondTwoViewPod resumeSecondTwo = (ResumeSecondTwoViewPod) rootView;

      id = R.id.secondRootViewSecondTwo;
      LinearLayout secondRootViewSecondTwo = ViewBindings.findChildViewById(rootView, id);
      if (secondRootViewSecondTwo == null) {
        break missingId;
      }

      id = R.id.tvPosition;
      TextView tvPosition = ViewBindings.findChildViewById(rootView, id);
      if (tvPosition == null) {
        break missingId;
      }

      return new ViewPodZresumeSecondTwoBinding((ResumeSecondTwoViewPod) rootView,
          containerAchievement, containerAddress, containerContact, containerDoB,
          containerEducation, containerEmail, containerExperience, containerFirstPageLeftSide,
          containerFirstPageRightSide, containerName, containerNationality, containerObjective,
          containerPhone, containerProject, containerReference, containerSecondPageLeftSide,
          containerSecondPageRightSide, containerSkill, containerWebsite, firstRootView,
          ivSelectedImage, ivSignature, resumeSecondTwo, secondRootViewSecondTwo, tvPosition);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
