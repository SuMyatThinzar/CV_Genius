// Generated by view binder compiler. Do not edit!
package com.smtz.cvgenius.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textfield.TextInputEditText;
import com.smtz.cvgenius.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import soup.neumorphism.NeumorphButton;

public final class ActivityPersonalDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final NeumorphButton btnSave;

  @NonNull
  public final TextView errorContact;

  @NonNull
  public final TextView errorName;

  @NonNull
  public final EditText etAddress;

  @NonNull
  public final TextInputEditText etContact;

  @NonNull
  public final TextInputEditText etDateOfBirth;

  @NonNull
  public final TextInputEditText etEmail;

  @NonNull
  public final TextInputEditText etFirstName;

  @NonNull
  public final TextInputEditText etLastName;

  @NonNull
  public final TextInputEditText etNationality;

  @NonNull
  public final TextInputEditText etProfessionalTitle;

  @NonNull
  public final TextInputEditText etWebsite;

  @NonNull
  public final FrameLayout frameLayout;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final MaterialToolbar toolBar;

  private ActivityPersonalDetailBinding(@NonNull LinearLayout rootView, @NonNull ImageView btnBack,
      @NonNull NeumorphButton btnSave, @NonNull TextView errorContact, @NonNull TextView errorName,
      @NonNull EditText etAddress, @NonNull TextInputEditText etContact,
      @NonNull TextInputEditText etDateOfBirth, @NonNull TextInputEditText etEmail,
      @NonNull TextInputEditText etFirstName, @NonNull TextInputEditText etLastName,
      @NonNull TextInputEditText etNationality, @NonNull TextInputEditText etProfessionalTitle,
      @NonNull TextInputEditText etWebsite, @NonNull FrameLayout frameLayout,
      @NonNull NestedScrollView nestedScrollView, @NonNull MaterialToolbar toolBar) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnSave = btnSave;
    this.errorContact = errorContact;
    this.errorName = errorName;
    this.etAddress = etAddress;
    this.etContact = etContact;
    this.etDateOfBirth = etDateOfBirth;
    this.etEmail = etEmail;
    this.etFirstName = etFirstName;
    this.etLastName = etLastName;
    this.etNationality = etNationality;
    this.etProfessionalTitle = etProfessionalTitle;
    this.etWebsite = etWebsite;
    this.frameLayout = frameLayout;
    this.nestedScrollView = nestedScrollView;
    this.toolBar = toolBar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPersonalDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPersonalDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_personal_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPersonalDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnSave;
      NeumorphButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.errorContact;
      TextView errorContact = ViewBindings.findChildViewById(rootView, id);
      if (errorContact == null) {
        break missingId;
      }

      id = R.id.errorName;
      TextView errorName = ViewBindings.findChildViewById(rootView, id);
      if (errorName == null) {
        break missingId;
      }

      id = R.id.etAddress;
      EditText etAddress = ViewBindings.findChildViewById(rootView, id);
      if (etAddress == null) {
        break missingId;
      }

      id = R.id.etContact;
      TextInputEditText etContact = ViewBindings.findChildViewById(rootView, id);
      if (etContact == null) {
        break missingId;
      }

      id = R.id.etDateOfBirth;
      TextInputEditText etDateOfBirth = ViewBindings.findChildViewById(rootView, id);
      if (etDateOfBirth == null) {
        break missingId;
      }

      id = R.id.etEmail;
      TextInputEditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etFirstName;
      TextInputEditText etFirstName = ViewBindings.findChildViewById(rootView, id);
      if (etFirstName == null) {
        break missingId;
      }

      id = R.id.etLastName;
      TextInputEditText etLastName = ViewBindings.findChildViewById(rootView, id);
      if (etLastName == null) {
        break missingId;
      }

      id = R.id.etNationality;
      TextInputEditText etNationality = ViewBindings.findChildViewById(rootView, id);
      if (etNationality == null) {
        break missingId;
      }

      id = R.id.etProfessionalTitle;
      TextInputEditText etProfessionalTitle = ViewBindings.findChildViewById(rootView, id);
      if (etProfessionalTitle == null) {
        break missingId;
      }

      id = R.id.etWebsite;
      TextInputEditText etWebsite = ViewBindings.findChildViewById(rootView, id);
      if (etWebsite == null) {
        break missingId;
      }

      id = R.id.frameLayout;
      FrameLayout frameLayout = ViewBindings.findChildViewById(rootView, id);
      if (frameLayout == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.toolBar;
      MaterialToolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      return new ActivityPersonalDetailBinding((LinearLayout) rootView, btnBack, btnSave,
          errorContact, errorName, etAddress, etContact, etDateOfBirth, etEmail, etFirstName,
          etLastName, etNationality, etProfessionalTitle, etWebsite, frameLayout, nestedScrollView,
          toolBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
