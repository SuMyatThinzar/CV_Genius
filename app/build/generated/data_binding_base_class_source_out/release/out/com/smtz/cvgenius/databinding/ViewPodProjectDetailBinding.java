// Generated by view binder compiler. Do not edit!
package com.smtz.cvgenius.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.smtz.cvgenius.R;
import com.smtz.cvgenius.presentation.details.projectDetails.ProjectDetailViewPod;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import soup.neumorphism.NeumorphButton;

public final class ViewPodProjectDetailBinding implements ViewBinding {
  @NonNull
  private final ProjectDetailViewPod rootView;

  @NonNull
  public final ImageView btnDelete;

  @NonNull
  public final NeumorphButton btnSave;

  @NonNull
  public final CheckBox cbEndDate;

  @NonNull
  public final RelativeLayout containerCollapsed;

  @NonNull
  public final LinearLayout containerExpanded;

  @NonNull
  public final TextView endDate;

  @NonNull
  public final TextView errorEndDate;

  @NonNull
  public final TextView errorProjectTitle;

  @NonNull
  public final TextView errorStartDate;

  @NonNull
  public final TextInputEditText etCredentialURL;

  @NonNull
  public final TextInputEditText etPosition;

  @NonNull
  public final TextInputEditText etProjectDescription;

  @NonNull
  public final TextInputEditText etProjectTitle;

  @NonNull
  public final TextView startDate;

  @NonNull
  public final TextView tvDetailName;

  @NonNull
  public final TextView tvDetailNameExpanded;

  private ViewPodProjectDetailBinding(@NonNull ProjectDetailViewPod rootView,
      @NonNull ImageView btnDelete, @NonNull NeumorphButton btnSave, @NonNull CheckBox cbEndDate,
      @NonNull RelativeLayout containerCollapsed, @NonNull LinearLayout containerExpanded,
      @NonNull TextView endDate, @NonNull TextView errorEndDate,
      @NonNull TextView errorProjectTitle, @NonNull TextView errorStartDate,
      @NonNull TextInputEditText etCredentialURL, @NonNull TextInputEditText etPosition,
      @NonNull TextInputEditText etProjectDescription, @NonNull TextInputEditText etProjectTitle,
      @NonNull TextView startDate, @NonNull TextView tvDetailName,
      @NonNull TextView tvDetailNameExpanded) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnSave = btnSave;
    this.cbEndDate = cbEndDate;
    this.containerCollapsed = containerCollapsed;
    this.containerExpanded = containerExpanded;
    this.endDate = endDate;
    this.errorEndDate = errorEndDate;
    this.errorProjectTitle = errorProjectTitle;
    this.errorStartDate = errorStartDate;
    this.etCredentialURL = etCredentialURL;
    this.etPosition = etPosition;
    this.etProjectDescription = etProjectDescription;
    this.etProjectTitle = etProjectTitle;
    this.startDate = startDate;
    this.tvDetailName = tvDetailName;
    this.tvDetailNameExpanded = tvDetailNameExpanded;
  }

  @Override
  @NonNull
  public ProjectDetailViewPod getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewPodProjectDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewPodProjectDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_pod_project_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewPodProjectDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      ImageView btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnSave;
      NeumorphButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.cbEndDate;
      CheckBox cbEndDate = ViewBindings.findChildViewById(rootView, id);
      if (cbEndDate == null) {
        break missingId;
      }

      id = R.id.containerCollapsed;
      RelativeLayout containerCollapsed = ViewBindings.findChildViewById(rootView, id);
      if (containerCollapsed == null) {
        break missingId;
      }

      id = R.id.containerExpanded;
      LinearLayout containerExpanded = ViewBindings.findChildViewById(rootView, id);
      if (containerExpanded == null) {
        break missingId;
      }

      id = R.id.endDate;
      TextView endDate = ViewBindings.findChildViewById(rootView, id);
      if (endDate == null) {
        break missingId;
      }

      id = R.id.errorEndDate;
      TextView errorEndDate = ViewBindings.findChildViewById(rootView, id);
      if (errorEndDate == null) {
        break missingId;
      }

      id = R.id.errorProjectTitle;
      TextView errorProjectTitle = ViewBindings.findChildViewById(rootView, id);
      if (errorProjectTitle == null) {
        break missingId;
      }

      id = R.id.errorStartDate;
      TextView errorStartDate = ViewBindings.findChildViewById(rootView, id);
      if (errorStartDate == null) {
        break missingId;
      }

      id = R.id.etCredentialURL;
      TextInputEditText etCredentialURL = ViewBindings.findChildViewById(rootView, id);
      if (etCredentialURL == null) {
        break missingId;
      }

      id = R.id.etPosition;
      TextInputEditText etPosition = ViewBindings.findChildViewById(rootView, id);
      if (etPosition == null) {
        break missingId;
      }

      id = R.id.etProjectDescription;
      TextInputEditText etProjectDescription = ViewBindings.findChildViewById(rootView, id);
      if (etProjectDescription == null) {
        break missingId;
      }

      id = R.id.etProjectTitle;
      TextInputEditText etProjectTitle = ViewBindings.findChildViewById(rootView, id);
      if (etProjectTitle == null) {
        break missingId;
      }

      id = R.id.startDate;
      TextView startDate = ViewBindings.findChildViewById(rootView, id);
      if (startDate == null) {
        break missingId;
      }

      id = R.id.tvDetailName;
      TextView tvDetailName = ViewBindings.findChildViewById(rootView, id);
      if (tvDetailName == null) {
        break missingId;
      }

      id = R.id.tvDetailNameExpanded;
      TextView tvDetailNameExpanded = ViewBindings.findChildViewById(rootView, id);
      if (tvDetailNameExpanded == null) {
        break missingId;
      }

      return new ViewPodProjectDetailBinding((ProjectDetailViewPod) rootView, btnDelete, btnSave,
          cbEndDate, containerCollapsed, containerExpanded, endDate, errorEndDate,
          errorProjectTitle, errorStartDate, etCredentialURL, etPosition, etProjectDescription,
          etProjectTitle, startDate, tvDetailName, tvDetailNameExpanded);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
