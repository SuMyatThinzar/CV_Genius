// Generated by view binder compiler. Do not edit!
package com.smtz.cvgenius.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.smtz.cvgenius.R;
import com.smtz.cvgenius.presentation.details.reference.ReferenceViewPod;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import soup.neumorphism.NeumorphButton;

public final class ViewPodReferencesBinding implements ViewBinding {
  @NonNull
  private final ReferenceViewPod rootView;

  @NonNull
  public final ImageView btnDelete;

  @NonNull
  public final NeumorphButton btnSave;

  @NonNull
  public final RelativeLayout containerCollapsed;

  @NonNull
  public final LinearLayout containerExpanded;

  @NonNull
  public final TextView errorReferenceName;

  @NonNull
  public final TextInputEditText etCompanyName;

  @NonNull
  public final TextInputEditText etEmail;

  @NonNull
  public final TextInputEditText etOthers;

  @NonNull
  public final TextInputEditText etPhoneNumber;

  @NonNull
  public final TextInputEditText etPosition;

  @NonNull
  public final TextInputEditText etReferenceName;

  @NonNull
  public final TextView tvDetailName;

  @NonNull
  public final TextView tvDetailNameExpanded;

  private ViewPodReferencesBinding(@NonNull ReferenceViewPod rootView, @NonNull ImageView btnDelete,
      @NonNull NeumorphButton btnSave, @NonNull RelativeLayout containerCollapsed,
      @NonNull LinearLayout containerExpanded, @NonNull TextView errorReferenceName,
      @NonNull TextInputEditText etCompanyName, @NonNull TextInputEditText etEmail,
      @NonNull TextInputEditText etOthers, @NonNull TextInputEditText etPhoneNumber,
      @NonNull TextInputEditText etPosition, @NonNull TextInputEditText etReferenceName,
      @NonNull TextView tvDetailName, @NonNull TextView tvDetailNameExpanded) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnSave = btnSave;
    this.containerCollapsed = containerCollapsed;
    this.containerExpanded = containerExpanded;
    this.errorReferenceName = errorReferenceName;
    this.etCompanyName = etCompanyName;
    this.etEmail = etEmail;
    this.etOthers = etOthers;
    this.etPhoneNumber = etPhoneNumber;
    this.etPosition = etPosition;
    this.etReferenceName = etReferenceName;
    this.tvDetailName = tvDetailName;
    this.tvDetailNameExpanded = tvDetailNameExpanded;
  }

  @Override
  @NonNull
  public ReferenceViewPod getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewPodReferencesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewPodReferencesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_pod_references, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewPodReferencesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      ImageView btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnSave;
      NeumorphButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.containerCollapsed;
      RelativeLayout containerCollapsed = ViewBindings.findChildViewById(rootView, id);
      if (containerCollapsed == null) {
        break missingId;
      }

      id = R.id.containerExpanded;
      LinearLayout containerExpanded = ViewBindings.findChildViewById(rootView, id);
      if (containerExpanded == null) {
        break missingId;
      }

      id = R.id.errorReferenceName;
      TextView errorReferenceName = ViewBindings.findChildViewById(rootView, id);
      if (errorReferenceName == null) {
        break missingId;
      }

      id = R.id.etCompanyName;
      TextInputEditText etCompanyName = ViewBindings.findChildViewById(rootView, id);
      if (etCompanyName == null) {
        break missingId;
      }

      id = R.id.etEmail;
      TextInputEditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etOthers;
      TextInputEditText etOthers = ViewBindings.findChildViewById(rootView, id);
      if (etOthers == null) {
        break missingId;
      }

      id = R.id.etPhoneNumber;
      TextInputEditText etPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (etPhoneNumber == null) {
        break missingId;
      }

      id = R.id.etPosition;
      TextInputEditText etPosition = ViewBindings.findChildViewById(rootView, id);
      if (etPosition == null) {
        break missingId;
      }

      id = R.id.etReferenceName;
      TextInputEditText etReferenceName = ViewBindings.findChildViewById(rootView, id);
      if (etReferenceName == null) {
        break missingId;
      }

      id = R.id.tvDetailName;
      TextView tvDetailName = ViewBindings.findChildViewById(rootView, id);
      if (tvDetailName == null) {
        break missingId;
      }

      id = R.id.tvDetailNameExpanded;
      TextView tvDetailNameExpanded = ViewBindings.findChildViewById(rootView, id);
      if (tvDetailNameExpanded == null) {
        break missingId;
      }

      return new ViewPodReferencesBinding((ReferenceViewPod) rootView, btnDelete, btnSave,
          containerCollapsed, containerExpanded, errorReferenceName, etCompanyName, etEmail,
          etOthers, etPhoneNumber, etPosition, etReferenceName, tvDetailName, tvDetailNameExpanded);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
