// Generated by view binder compiler. Do not edit!
package com.smtz.cvgenius.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.smtz.cvgenius.R;
import com.smtz.cvgenius.common.components.DrawingView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import soup.neumorphism.NeumorphButton;

public final class ActivitySignatureBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final NeumorphButton btnClear;

  @NonNull
  public final NeumorphButton btnSave;

  @NonNull
  public final DrawingView drawingView;

  @NonNull
  public final FrameLayout frameLayout;

  @NonNull
  public final MaterialToolbar toolBar;

  @NonNull
  public final TextView tvDetailNameExpanded;

  private ActivitySignatureBinding(@NonNull LinearLayout rootView, @NonNull ImageView btnBack,
      @NonNull NeumorphButton btnClear, @NonNull NeumorphButton btnSave,
      @NonNull DrawingView drawingView, @NonNull FrameLayout frameLayout,
      @NonNull MaterialToolbar toolBar, @NonNull TextView tvDetailNameExpanded) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnClear = btnClear;
    this.btnSave = btnSave;
    this.drawingView = drawingView;
    this.frameLayout = frameLayout;
    this.toolBar = toolBar;
    this.tvDetailNameExpanded = tvDetailNameExpanded;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignatureBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignatureBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_signature, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignatureBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnClear;
      NeumorphButton btnClear = ViewBindings.findChildViewById(rootView, id);
      if (btnClear == null) {
        break missingId;
      }

      id = R.id.btnSave;
      NeumorphButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.drawing_view;
      DrawingView drawingView = ViewBindings.findChildViewById(rootView, id);
      if (drawingView == null) {
        break missingId;
      }

      id = R.id.frameLayout;
      FrameLayout frameLayout = ViewBindings.findChildViewById(rootView, id);
      if (frameLayout == null) {
        break missingId;
      }

      id = R.id.toolBar;
      MaterialToolbar toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }

      id = R.id.tvDetailNameExpanded;
      TextView tvDetailNameExpanded = ViewBindings.findChildViewById(rootView, id);
      if (tvDetailNameExpanded == null) {
        break missingId;
      }

      return new ActivitySignatureBinding((LinearLayout) rootView, btnBack, btnClear, btnSave,
          drawingView, frameLayout, toolBar, tvDetailNameExpanded);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
